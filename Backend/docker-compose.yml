services:
  api_hackathon:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["/entrypoint.sh", "python", "manage.py", "runserver", "0.0.0.0:7654"]
    ports:
      - "7654:7654"
    environment:
      - BACKEND_SECRET_KEY=${BACKEND_SECRET_KEY}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - SCALEWAY_API_KEY=${SCALEWAY_API_KEY}
    volumes:
      - ./media:/app/media
      - ./security/migrations:/app/security/migrations
      - ./news/migrations:/app/news/migrations
      - ./scraper/migrations:/app/scraper/migrations
      - ./pharmac/migrations:/app/pharmac/migrations
      - ./regulations/migrations:/app/regulations/migrations
    depends_on:
      db_hackathon:
        condition: service_healthy

  db_hackathon:
    image: postgres:17-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: